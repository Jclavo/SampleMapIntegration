{"version":3,"sources":["src/app/home/home.page.html","src/app/home/home.module.ts","src/app/home/home.page.scss","src/app/home/home.page.ts","src/app/models/map.ts","src/app/models/value.ts","src/app/services/map.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-title>\\r\\n      Integrate Map Sample\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\" scrolling=\\\"no\\\">\\r\\n  <ion-header collapse=\\\"condense\\\">\\r\\n    <ion-toolbar>\\r\\n      <ion-title size=\\\"large\\\">Integrate Map Sample</ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n\\r\\n  <ion-row text-center>\\r\\n    <ion-col col-6>\\r\\n      <ion-button expand=\\\"full\\\" color=\\\"dark\\\" (click)=\\\"testOneValue()\\\">1 Markert</ion-button>\\r\\n    </ion-col>\\r\\n    <ion-col col-6>\\r\\n      <ion-button expand=\\\"full\\\" color=\\\"danger\\\" (click)=\\\"testMassiveValues()\\\">Many Markets</ion-button>\\r\\n    </ion-col>\\r\\n    <ion-col col-6>\\r\\n      <ion-button expand=\\\"full\\\" color=\\\"success\\\" (click)=\\\"testCustomMarkert()\\\">Custom Markets\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n    <ion-col col-6>\\r\\n      <ion-button expand=\\\"full\\\" color=\\\"danger\\\" (click)=\\\"testMassiveValuesSpecificMarkets()\\\">Shape with specific Markets</ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <ion-row text-center>\\r\\n    <ion-col col-3>\\r\\n      <ion-item>\\r\\n        <ion-label>Layer</ion-label>\\r\\n        <ion-select [(ngModel)]=\\\"map.options.layer\\\" interface=\\\"popover\\\" name=\\\"layer\\\" placeholder=\\\"Select a layer\\\"\\r\\n          (ionChange)=\\\"onSelectLayer()\\\">\\r\\n          <ion-select-option *ngFor=\\\"let layer of layers\\\" value=\\\"{{layer.id}}\\\">\\r\\n            {{layer.name}}\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n    </ion-col>\\r\\n    <ion-col col-3>\\r\\n      <ion-item>\\r\\n        <ion-label>Shape</ion-label>\\r\\n        <ion-select [(ngModel)]=\\\"map.options.shape\\\" interface=\\\"popover\\\" name=\\\"shape\\\" placeholder=\\\"Select a shape\\\">\\r\\n          <ion-select-option *ngFor=\\\"let shape of shapes\\\" value=\\\"{{shape.id}}\\\">\\r\\n            {{shape.name}}\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n    </ion-col>\\r\\n    <ion-col col-3>\\r\\n      <ion-item>\\r\\n        <ion-label>Shape Color</ion-label>\\r\\n        <ion-select [(ngModel)]=\\\"map.options.shapeColor\\\" interface=\\\"popover\\\" name=\\\"shapeColor\\\"\\r\\n          placeholder=\\\"Select a color for the shape\\\">\\r\\n          <ion-select-option *ngFor=\\\"let shapeColor of shapeColors\\\" value=\\\"{{shapeColor.name}}\\\">\\r\\n            {{shapeColor.name}}\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n    </ion-col>\\r\\n    <ion-col col-3>\\r\\n      <ion-item>\\r\\n        <ion-label>Hide markerts</ion-label>\\r\\n        <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"map.options.hideMarkets\\\"></ion-checkbox>\\r\\n      </ion-item>\\r\\n    </ion-col>\\r\\n\\r\\n  </ion-row>\\r\\n\\r\\n  <iframe [src]=\\\"mapURL\\\" width=\\\"100%\\\" height=\\\"100%\\\" scrolling=\\\"no\\\" frameborder=\\\"0\\\"></iframe>\\r\\n\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { HomePage } from './home.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: HomePage\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [HomePage]\r\n})\r\nexport class HomePageModule {}\r\n","export default \"#container {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n#container strong {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n#container p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\n#container a {\\n  text-decoration: none;\\n}\\n\\nion-content ion-toolbar {\\n  --background: translucent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9DOlxcVXNlcnNcXExldmVsXFxEb2N1bWVudHNcXEFuZ3VsYXJXb3Jrc3BhY2VcXFNhbXBsZU1hcEludGVncmF0aW9uL3NyY1xcYXBwXFxob21lXFxob21lLnBhZ2Uuc2NzcyIsInNyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBRUEsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFFBQUE7RUFDQSwyQkFBQTtBQ0FGOztBREdBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0FDQUY7O0FER0E7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFFQSxjQUFBO0VBRUEsU0FBQTtBQ0ZGOztBREtBO0VBQ0UscUJBQUE7QUNGRjs7QURLQTtFQUNFLHlCQUFBO0FDRkYiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2NvbnRhaW5lciB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICB0b3A6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbn1cclxuXHJcbiNjb250YWluZXIgc3Ryb25nIHtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDI2cHg7XHJcbn1cclxuXHJcbiNjb250YWluZXIgcCB7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG5cclxuICBjb2xvcjogIzhjOGM4YztcclxuXHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4jY29udGFpbmVyIGEge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuaW9uLWNvbnRlbnQgaW9uLXRvb2xiYXIge1xyXG4gIC0tYmFja2dyb3VuZDogdHJhbnNsdWNlbnQ7XHJcbn0iLCIjY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4jY29udGFpbmVyIHN0cm9uZyB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDI2cHg7XG59XG5cbiNjb250YWluZXIgcCB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIycHg7XG4gIGNvbG9yOiAjOGM4YzhjO1xuICBtYXJnaW46IDA7XG59XG5cbiNjb250YWluZXIgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuaW9uLWNvbnRlbnQgaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zbHVjZW50O1xufSJdfQ== */\"","import { Component } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\n//SERVICE\r\nimport { MapService } from '../services/map.service';\r\n\r\n//MODELS\r\nimport { Map } from '../models/map';\r\nimport { Value } from '../models/value';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: ['home.page.scss'],\r\n})\r\nexport class HomePage {\r\n\r\n  public map = new Map();\r\n\r\n  //Values for options\r\n  public layers: Array<Value> = [];\r\n  public shapes: Array<Value> = [];\r\n  public shapeColors: Array<Value> = [];\r\n\r\n  public mapURL: any = this.mapService.getMapaUrlRandom();\r\n\r\n  constructor(private mapService: MapService) {\r\n\r\n    this.loadLayers();\r\n    this.loadShapes();\r\n    this.loadShapeColors();\r\n\r\n  }\r\n\r\n  loadLayers() {\r\n    this.layers.push(new Value(1, 'MapBox'));\r\n    this.layers.push(new Value(2, 'EduPala'));\r\n    this.layers.push(new Value(3, 'OpenStreet'));\r\n    this.layers.push(new Value(4, 'ArcGis'));\r\n  }\r\n\r\n  loadShapes() {\r\n    this.shapes.push(new Value(1, 'Point'));\r\n    this.shapes.push(new Value(2, 'Polyline'));\r\n    this.shapes.push(new Value(3, 'Polygon'));\r\n    this.shapes.push(new Value(4, 'Rectangle'));\r\n    this.shapes.push(new Value(5, 'Circle'));\r\n  }\r\n\r\n  loadShapeColors() {\r\n    this.shapeColors.push(new Value(1, 'red'));\r\n    this.shapeColors.push(new Value(2, 'blue'));\r\n    this.shapeColors.push(new Value(3, 'green'));\r\n    this.shapeColors.push(new Value(4, 'yellow'));\r\n    this.shapeColors.push(new Value(5, 'black'));\r\n  }\r\n\r\n\r\n  onSelectLayer() {\r\n    console.log('this.map.options.layer ', this.map.options.layer);\r\n  }\r\n\r\n  testOneValue() {\r\n\r\n    this.map.latitude = \"-15.795650\";\r\n    this.map.longitude = \"-47.878197\";\r\n    this.map.marker = 'Salão Metropolitano';\r\n\r\n    let params = new HttpParams()\r\n      .set(\"latitude\", this.map.latitude)\r\n      .set(\"longitude\", this.map.longitude)\r\n      .set(\"marker\", this.map.marker)\r\n      .set(\"massive\", \"\")\r\n      .set(\"coordenatesList\", \"\")\r\n      .set(\"options\", JSON.stringify(this.map.options))\r\n\r\n    this.mapURL = this.mapService.getMapaURL(params);\r\n\r\n  }\r\n\r\n  async testMassiveValues() {\r\n\r\n    let coordenates: Array<any> = [];\r\n\r\n    coordenates.push({ \"latitude\": \"-15.795650\", \"longitude\": \"-47.878197\", \"marker\": 'Museu do canção', \"color\": 'RED' });\r\n    coordenates.push({ \"latitude\": \"-15.798153\", \"longitude\": \"-47.875527\", \"marker\": 'Cat&#201dral Metropolitana', \"color\": 'GREEN' });\r\n    coordenates.push({ \"latitude\": \"-15.799407\", \"longitude\": \"-47.864152\", \"marker\": 'Congresso Nacional', \"color\": 'BLUE' });\r\n    coordenates.push({ \"latitude\": \"-15.783896\", \"longitude\": \"-47.913365\", \"marker\": 'Memorial JK', \"color\": 'RED' });\r\n    coordenates.push({ \"latitude\": \"-15.799887\", \"longitude\": \"-47.907853\", \"marker\": 'Parque da cidade', \"color\": 'BLUE' });\r\n    coordenates.push({ \"latitude\": \"-15.790241\", \"longitude\": \"-47.892789\", \"marker\": 'Torre de TV', \"color\": 'GREEN' });\r\n\r\n    let token = await this.mapService.getToken();\r\n\r\n\r\n    for (let index = 0; index < coordenates.length; index++) {\r\n\r\n      let params = {\r\n        'token': token,\r\n        'latitude': coordenates[index].latitude,\r\n        'longitude': coordenates[index].longitude,\r\n        'marker': coordenates[index].marker,\r\n        'color': coordenates[index].color,\r\n\r\n      }\r\n      await this.mapService.setCoordenates(params);\r\n    }\r\n\r\n    let params = new HttpParams()\r\n      .set(\"token\", token)\r\n      .set(\"options\", JSON.stringify(this.map.options))\r\n\r\n    this.mapURL = this.mapService.getMapaURLMassive(params);\r\n  }\r\n\r\n  async testCustomMarkert() {\r\n    let coordenates: Array<any> = [];\r\n\r\n    coordenates.push({ \"latitude\": \"-15.795650\", \"longitude\": \"-47.878197\", \"marker\": '<p style=\"color:red;\"><b>Museu Nacional</b></p>', \"color\": 'RED' });\r\n    coordenates.push({ \"latitude\": \"-15.798153\", \"longitude\": \"-47.875527\", \"marker\": '<p style=\"color:green;\"><b>Salão Metropolitano</b></p>', \"color\": 'GREEN' });\r\n    coordenates.push({ \"latitude\": \"-15.799407\", \"longitude\": \"-47.864152\", \"marker\": '<p style=\"color:blue;\"><b>Congresso Nacional</b></p>', \"color\": 'BLUE' });\r\n\r\n    let token = await this.mapService.getToken();\r\n\r\n    for (let index = 0; index < coordenates.length; index++) {\r\n\r\n      let params = {\r\n        'token': token,\r\n        'latitude': coordenates[index].latitude,\r\n        'longitude': coordenates[index].longitude,\r\n        'marker': coordenates[index].marker,\r\n        'color': coordenates[index].color,\r\n\r\n      }\r\n      await this.mapService.setCoordenates(params);\r\n    }\r\n\r\n    let params = new HttpParams()\r\n      .set(\"token\", token)\r\n      .set(\"options\", JSON.stringify(this.map.options))\r\n\r\n    this.mapURL = this.mapService.getMapaURLMassive(params);\r\n  }\r\n\r\n  async testMassiveValuesSpecificMarkets() {\r\n\r\n    let coordenates: Array<any> = [];\r\n\r\n    coordenates.push({ \"latitude\": \"-15.795650\", \"longitude\": \"-47.878197\", \"marker\": 'Museu do canção', \"color\": 'RED' });\r\n    coordenates.push({ \"latitude\": \"-15.798153\", \"longitude\": \"-47.875527\", \"marker\": 'Cat&#201dral Metropolitana', \"color\": 'GREEN' });\r\n    coordenates.push({ \"latitude\": \"-15.799407\", \"longitude\": \"-47.864152\", \"marker\": 'Congresso Nacional', \"color\": 'BLUE' });\r\n    coordenates.push({ \"latitude\": \"-15.783896\", \"longitude\": \"-47.913365\", \"marker\": 'Memorial JK', \"color\": 'RED' });\r\n    coordenates.push({ \"latitude\": \"-15.799887\", \"longitude\": \"-47.907853\", \"marker\": 'Parque da cidade', \"color\": 'BLUE' });\r\n    coordenates.push({ \"latitude\": \"-15.790241\", \"longitude\": \"-47.892789\", \"marker\": 'Torre de TV', \"color\": 'GREEN' });\r\n\r\n    let token = await this.mapService.getToken();\r\n\r\n\r\n    for (let index = 0; index < coordenates.length; index++) {\r\n\r\n      let params = {\r\n        'token': token,\r\n        'latitude': coordenates[index].latitude,\r\n        'longitude': coordenates[index].longitude,\r\n        'marker': coordenates[index].marker,\r\n        'color': coordenates[index].color,\r\n\r\n      }\r\n      await this.mapService.setCoordenates(params);\r\n    }\r\n\r\n    this.map.options.showSpecificMarkerts = [0,5];\r\n    \r\n    let params = new HttpParams()\r\n      .set(\"token\", token)\r\n      .set(\"options\", JSON.stringify(this.map.options))\r\n\r\n    this.mapURL = this.mapService.getMapaURLMassive(params);\r\n  }\r\n\r\n}\r\n","export class Map {\r\n    latitude: string;\r\n    longitude: string;\r\n    marker: string;\r\n    color: string;\r\n    \r\n    massive: string = \"\"; \r\n    coordenatesList: string = \"\";\r\n    \r\n    token: string;\r\n    options = new Option();\r\n}\r\n\r\nclass Option{\r\n    layer: number = 1\r\n    shape: number = 1\r\n    shapeColor: string = 'red'\r\n    hideMarkets: boolean = false;\r\n    showSpecificMarkerts: Array<any> = [];\r\n    // showSpecificMarkerts: Array<any> = [0,5];\r\n}","export class Value{\r\n    id: number;\r\n    name: string;\r\n\r\n    constructor(_id: number, _name: string){\r\n        this.id = _id;\r\n        this.name = _name;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { HttpParams, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from \"rxjs/operators\";\r\n\r\n//SERVICE\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n\r\n  public mapServiceURL: any = environment.mapServiceURL;\r\n\r\n  public mapURL: any = this.domSanitizer.bypassSecurityTrustResourceUrl(this.mapServiceURL);\r\n\r\n  constructor(\r\n    private domSanitizer: DomSanitizer,\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  async getToken() {\r\n    return this.http.get(this.mapServiceURL + '/getToken').toPromise().then((response: any) => {\r\n      if (response.status) {\r\n        console.info(response.message);\r\n        return response.result;\r\n      } else {\r\n        console.error('error');\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  async setCoordenates(coordenates: any) {\r\n    coordenates.marker ? coordenates.marker = btoa(coordenates.marker) : \"\";\r\n\r\n    return this.http.post(this.mapServiceURL + '/setCoordenates', coordenates).toPromise().then((response: any) => {\r\n      if (response.status) {\r\n        console.info(response.message);\r\n      } else {\r\n        console.error(response.message);\r\n      }\r\n    })\r\n  }\r\n\r\n  getMapaURL(params: any){\r\n    \r\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(this.mapServiceURL + '?' + params);\r\n  }\r\n\r\n  getMapaURLMassive(params: any){\r\n    \r\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(this.mapServiceURL + '/showMassiveMap?' + params);\r\n  }\r\n\r\n  getMapaUrlRandom(){\r\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(this.mapServiceURL);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"home-home-module-es5.js"}