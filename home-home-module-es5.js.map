{"version":3,"sources":["src/app/home/home.page.html","src/app/home/home.module.ts","src/app/home/home.page.scss","src/app/home/home.page.ts","src/app/models/map.ts","src/app/models/value.ts","src/app/services/map.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Integrate Map Sample\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\" scrolling=\\\"no\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Integrate Map Sample</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-row text-center>\\n    <ion-col col-6>\\n      <ion-button expand=\\\"full\\\" color=\\\"dark\\\" (click)=\\\"testOneValue()\\\">1 Markert</ion-button>\\n    </ion-col>\\n    <ion-col col-6>\\n      <ion-button expand=\\\"full\\\" color=\\\"danger\\\" (click)=\\\"testMassiveValues()\\\">Many Markets</ion-button>\\n    </ion-col>\\n    <ion-col col-6>\\n      <ion-button expand=\\\"full\\\" color=\\\"success\\\" (click)=\\\"testCustomMarkert()\\\">Custom Markets\\n      </ion-button>\\n    </ion-col>\\n    <ion-col col-6>\\n      <ion-button expand=\\\"full\\\" color=\\\"danger\\\" (click)=\\\"testMassiveValuesSpecificMarkets()\\\">Shape with specific Markets</ion-button>\\n    </ion-col>\\n    <ion-col col-6>\\n      <ion-button expand=\\\"full\\\" color=\\\"dark\\\" (click)=\\\"testMapArea()\\\">Get Area for points</ion-button>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row text-center>\\n    <ion-col col-3>\\n      <ion-item>\\n        <ion-label>Layer</ion-label>\\n        <ion-select [(ngModel)]=\\\"map.options.layer\\\" interface=\\\"popover\\\" name=\\\"layer\\\" placeholder=\\\"Select a layer\\\"\\n          (ionChange)=\\\"onSelectLayer()\\\">\\n          <ion-select-option *ngFor=\\\"let layer of layers\\\" value=\\\"{{layer.id}}\\\">\\n            {{layer.name}}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-col>\\n    <ion-col col-3>\\n      <ion-item>\\n        <ion-label>Shape</ion-label>\\n        <ion-select [(ngModel)]=\\\"map.options.shape\\\" interface=\\\"popover\\\" name=\\\"shape\\\" placeholder=\\\"Select a shape\\\">\\n          <ion-select-option *ngFor=\\\"let shape of shapes\\\" value=\\\"{{shape.id}}\\\">\\n            {{shape.name}}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-col>\\n    <ion-col col-3>\\n      <ion-item>\\n        <ion-label>Shape Color</ion-label>\\n        <ion-select [(ngModel)]=\\\"map.options.shapeColor\\\" interface=\\\"popover\\\" name=\\\"shapeColor\\\"\\n          placeholder=\\\"Select a color for the shape\\\">\\n          <ion-select-option *ngFor=\\\"let shapeColor of shapeColors\\\" value=\\\"{{shapeColor.name}}\\\">\\n            {{shapeColor.name}}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-col>\\n    <ion-col col-3>\\n      <ion-item>\\n        <ion-label>Hide markerts</ion-label>\\n        <ion-checkbox slot=\\\"end\\\" [(ngModel)]=\\\"map.options.hideMarkets\\\"></ion-checkbox>\\n      </ion-item>\\n    </ion-col>\\n\\n  </ion-row>\\n\\n  <iframe [src]=\\\"mapURL\\\" width=\\\"100%\\\" height=\\\"100%\\\" scrolling=\\\"no\\\" frameborder=\\\"0\\\"></iframe>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","export default \"#container {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n}\\n\\n#container strong {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\n#container p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\n#container a {\\n  text-decoration: none;\\n}\\n\\nion-content ion-toolbar {\\n  --background: translucent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2pjbGF2by9pb25pYy13b3Jrc3BhY2UvU2FtcGxlTWFwSW50ZWdyYXRpb24vc3JjL2FwcC9ob21lL2hvbWUucGFnZS5zY3NzIiwic3JjL2FwcC9ob21lL2hvbWUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFFQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsUUFBQTtFQUNBLG1DQUFBO1VBQUEsMkJBQUE7QUNBRjs7QURHQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQ0FGOztBREdBO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBRUEsY0FBQTtFQUVBLFNBQUE7QUNGRjs7QURLQTtFQUNFLHFCQUFBO0FDRkY7O0FES0E7RUFDRSx5QkFBQTtBQ0ZGIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG4jY29udGFpbmVyIHAge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuXG4gIGNvbG9yOiAjOGM4YzhjO1xuXG4gIG1hcmdpbjogMDtcbn1cblxuI2NvbnRhaW5lciBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5pb24tY29udGVudCBpb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNsdWNlbnQ7XG59IiwiI2NvbnRhaW5lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuXG4jY29udGFpbmVyIHAge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICBjb2xvcjogIzhjOGM4YztcbiAgbWFyZ2luOiAwO1xufVxuXG4jY29udGFpbmVyIGEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmlvbi1jb250ZW50IGlvbi10b29sYmFyIHtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc2x1Y2VudDtcbn0iXX0= */\"","import { Component } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\n\n//SERVICE\nimport { MapService } from '../services/map.service';\n\n//MODELS\nimport { Map } from '../models/map';\nimport { Value } from '../models/value';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  public map = new Map();\n\n  //Values for options\n  public layers: Array<Value> = [];\n  public shapes: Array<Value> = [];\n  public shapeColors: Array<Value> = [];\n\n  public mapURL: any = this.mapService.getMapaUrlRandom();\n\n  constructor(private mapService: MapService) {\n\n    this.loadLayers();\n    this.loadShapes();\n    this.loadShapeColors();\n\n  }\n\n  loadLayers() {\n    this.layers.push(new Value(1, 'MapBox'));\n    this.layers.push(new Value(2, 'EduPala'));\n    this.layers.push(new Value(3, 'OpenStreet'));\n    this.layers.push(new Value(4, 'ArcGis'));\n  }\n\n  loadShapes() {\n    this.shapes.push(new Value(1, 'Point'));\n    this.shapes.push(new Value(2, 'Polyline'));\n    this.shapes.push(new Value(3, 'Polygon'));\n    this.shapes.push(new Value(4, 'Rectangle'));\n    this.shapes.push(new Value(5, 'Circle'));\n  }\n\n  loadShapeColors() {\n    this.shapeColors.push(new Value(1, 'red'));\n    this.shapeColors.push(new Value(2, 'blue'));\n    this.shapeColors.push(new Value(3, 'green'));\n    this.shapeColors.push(new Value(4, 'yellow'));\n    this.shapeColors.push(new Value(5, 'black'));\n  }\n\n\n  onSelectLayer() {\n    console.log('this.map.options.layer ', this.map.options.layer);\n  }\n\n  testOneValue() {\n\n    this.map.latitude = \"-15.795650\";\n    this.map.longitude = \"-47.878197\";\n    this.map.marker = 'Salão Metropolitano';\n\n    let params = new HttpParams()\n      .set(\"latitude\", this.map.latitude)\n      .set(\"longitude\", this.map.longitude)\n      .set(\"marker\", this.map.marker)\n      .set(\"massive\", \"\")\n      .set(\"coordenatesList\", \"\")\n      .set(\"options\", JSON.stringify(this.map.options))\n\n    this.mapURL = this.mapService.getMapaURL(params);\n\n  }\n\n  async testMassiveValues() {\n\n    let coordenates: Array<any> = [];\n\n    coordenates.push({ \"latitude\": \"-15.795650\", \"longitude\": \"-47.878197\", \"marker\": 'Museu do canção', \"color\": 'RED' });\n    coordenates.push({ \"latitude\": \"-15.798153\", \"longitude\": \"-47.875527\", \"marker\": 'Cat&#201dral Metropolitana', \"color\": 'GREEN' });\n    coordenates.push({ \"latitude\": \"-15.799407\", \"longitude\": \"-47.864152\", \"marker\": 'Congresso Nacional', \"color\": 'BLUE' });\n    coordenates.push({ \"latitude\": \"-15.783896\", \"longitude\": \"-47.913365\", \"marker\": 'Memorial JK', \"color\": 'RED' });\n    coordenates.push({ \"latitude\": \"-15.799887\", \"longitude\": \"-47.907853\", \"marker\": 'Parque da cidade', \"color\": 'BLUE' });\n    coordenates.push({ \"latitude\": \"-15.790241\", \"longitude\": \"-47.892789\", \"marker\": 'Torre de TV', \"color\": 'GREEN' });\n\n    let token = await this.mapService.getToken();\n\n\n    for (let index = 0; index < coordenates.length; index++) {\n\n      let params = {\n        'token': token,\n        'latitude': coordenates[index].latitude,\n        'longitude': coordenates[index].longitude,\n        'marker': coordenates[index].marker,\n        'color': coordenates[index].color,\n\n      }\n      await this.mapService.setCoordenates(params);\n    }\n\n    let params = new HttpParams()\n      .set(\"token\", token)\n      .set(\"options\", JSON.stringify(this.map.options))\n\n    this.mapURL = this.mapService.getMapaURLMassive(params);\n  }\n\n  async testCustomMarkert() {\n    let coordenates: Array<any> = [];\n\n    coordenates.push({ \"latitude\": \"-15.795650\", \"longitude\": \"-47.878197\", \"marker\": '<p style=\"color:red;\"><b>Museu Nacional</b></p>', \"color\": 'RED' });\n    coordenates.push({ \"latitude\": \"-15.798153\", \"longitude\": \"-47.875527\", \"marker\": '<p style=\"color:green;\"><b>Salão Metropolitano</b></p>', \"color\": 'GREEN' });\n    coordenates.push({ \"latitude\": \"-15.799407\", \"longitude\": \"-47.864152\", \"marker\": '<p style=\"color:blue;\"><b>Congresso Nacional</b></p>', \"color\": 'BLUE' });\n\n    let token = await this.mapService.getToken();\n\n    for (let index = 0; index < coordenates.length; index++) {\n\n      let params = {\n        'token': token,\n        'latitude': coordenates[index].latitude,\n        'longitude': coordenates[index].longitude,\n        'marker': coordenates[index].marker,\n        'color': coordenates[index].color,\n\n      }\n      await this.mapService.setCoordenates(params);\n    }\n\n    let params = new HttpParams()\n      .set(\"token\", token)\n      .set(\"options\", JSON.stringify(this.map.options))\n\n    this.mapURL = this.mapService.getMapaURLMassive(params);\n  }\n\n  async testMassiveValuesSpecificMarkets() {\n\n    let coordenates: Array<any> = [];\n\n    coordenates.push({ \"latitude\": \"-15.795650\", \"longitude\": \"-47.878197\", \"marker\": 'Museu do canção', \"color\": 'RED' });\n    coordenates.push({ \"latitude\": \"-15.798153\", \"longitude\": \"-47.875527\", \"marker\": 'Cat&#201dral Metropolitana', \"color\": 'GREEN' });\n    coordenates.push({ \"latitude\": \"-15.799407\", \"longitude\": \"-47.864152\", \"marker\": 'Congresso Nacional', \"color\": 'BLUE' });\n    coordenates.push({ \"latitude\": \"-15.783896\", \"longitude\": \"-47.913365\", \"marker\": 'Memorial JK', \"color\": 'RED' });\n    coordenates.push({ \"latitude\": \"-15.799887\", \"longitude\": \"-47.907853\", \"marker\": 'Parque da cidade', \"color\": 'BLUE' });\n    coordenates.push({ \"latitude\": \"-15.790241\", \"longitude\": \"-47.892789\", \"marker\": 'Torre de TV', \"color\": 'GREEN' });\n\n    let token = await this.mapService.getToken();\n\n\n    for (let index = 0; index < coordenates.length; index++) {\n\n      let params = {\n        'token': token,\n        'latitude': coordenates[index].latitude,\n        'longitude': coordenates[index].longitude,\n        'marker': coordenates[index].marker,\n        'color': coordenates[index].color,\n\n      }\n      await this.mapService.setCoordenates(params);\n    }\n\n    this.map.options.showSpecificMarkerts = [0,5];\n    \n    let params = new HttpParams()\n      .set(\"token\", token)\n      .set(\"options\", JSON.stringify(this.map.options))\n\n    this.mapURL = this.mapService.getMapaURLMassive(params);\n  }\n\n  /**\n   * \n   * web to check area: https://www.daftlogic.com/projects-google-maps-area-calculator-tool.htm#\n   */\n\n  async testMapArea() {\n\n    let coordenates: Array<any> = [];\n    \n    coordenates.push({ \"latitude\": \"-15.747309\", \"longitude\": \"-47.885165\", \"marker\": 'P4' });\n    coordenates.push({ \"latitude\": \"-15.746545\", \"longitude\": \"-47.882386\", \"marker\": 'P3'});\n    coordenates.push({ \"latitude\": \"-15.740432\", \"longitude\": \"-47.884371\", \"marker\": 'P2' });\n    coordenates.push({ \"latitude\": \"-15.741279\", \"longitude\": \"-47.887107\", \"marker\": 'P1' });\n\n    let token = await this.mapService.getToken();\n\n\n    for (let index = 0; index < coordenates.length; index++) {\n\n      let params = {\n        'token': token,\n        'latitude': coordenates[index].latitude,\n        'longitude': coordenates[index].longitude,\n        'marker': coordenates[index].marker,\n        'color': coordenates[index].color,\n\n      }\n      await this.mapService.setCoordenates(params);\n    }\n\n    this.map.options.shape = 3; //This is a Polygon shape, because to check it you need more than 2 points\n    this.map.options.showArea = true;\n\n    let params = new HttpParams()\n      .set(\"token\", token)\n      .set(\"options\", JSON.stringify(this.map.options))\n\n    this.mapURL = this.mapService.getMapaURLMassive(params);\n  }\n}\n","export class Map {\n    latitude: string;\n    longitude: string;\n    marker: string;\n    color: string;\n    \n    massive: string = \"\"; \n    coordenatesList: string = \"\";\n    \n    token: string;\n    options = new Option();\n}\n\nclass Option{\n    layer: number = 1\n    shape: number = 1\n    shapeColor: string = 'red'\n    hideMarkets: boolean = false;\n    showSpecificMarkerts: Array<any> = [];\n    showArea: boolean = false;\n    // showSpecificMarkerts: Array<any> = [0,5];\n}","export class Value{\n    id: number;\n    name: string;\n\n    constructor(_id: number, _name: string){\n        this.id = _id;\n        this.name = _name;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { HttpParams, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from \"rxjs/operators\";\n\n//SERVICE\nimport { environment } from \"../../environments/environment\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  public mapServiceURL: any = environment.mapServiceURL;\n\n  public mapURL: any = this.domSanitizer.bypassSecurityTrustResourceUrl(this.mapServiceURL);\n\n  constructor(\n    private domSanitizer: DomSanitizer,\n    private http: HttpClient,\n  ) { }\n\n  async getToken() {\n    return this.http.get(this.mapServiceURL + '/getToken').toPromise().then((response: any) => {\n      if (response.status) {\n        console.info(response.message);\n        return response.result;\n      } else {\n        console.error('error');\n        return;\n      }\n    });\n  }\n\n  async setCoordenates(coordenates: any) {\n    coordenates.marker ? coordenates.marker = btoa(coordenates.marker) : \"\";\n\n    return this.http.post(this.mapServiceURL + '/setCoordenates', coordenates).toPromise().then((response: any) => {\n      if (response.status) {\n        console.info(response.message);\n      } else {\n        console.error(response.message);\n      }\n    })\n  }\n\n  getMapaURL(params: any){\n    \n    return this.domSanitizer.bypassSecurityTrustResourceUrl(this.mapServiceURL + '?' + params);\n  }\n\n  getMapaURLMassive(params: any){\n    \n    return this.domSanitizer.bypassSecurityTrustResourceUrl(this.mapServiceURL + '/showMassiveMap?' + params);\n  }\n\n  getMapaUrlRandom(){\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(this.mapServiceURL);\n  }\n}\n"],"sourceRoot":"webpack:///","file":"home-home-module-es5.js"}